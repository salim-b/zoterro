% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zotero_credentials.R
\name{zotero_credentials}
\alias{zotero_credentials}
\alias{zotero_usr}
\alias{zotero_key}
\alias{zotero_user_id}
\alias{zotero_group_id}
\title{Get Zotero user ID and API key}
\usage{
zotero_usr()

zotero_key()

zotero_user_id(id)

zotero_group_id(id)
}
\arguments{
\item{id}{user or group iD}
}
\value{
Functions \code{zotero_user_id()} and \code{zotero_group_id()} return objects
of class \code{"zotero_user_id"} and \code{"zotero_group_id"}, both inheriting from class
\code{"zotero_id"}.
}
\description{
\itemize{
\item \code{zotero_usr()}: Return Zotero user ID
\item \code{zotero_key()}: Return Zotero key
}

\itemize{
\item \code{zotero_user_id()}, \code{zotero_group_id()}: supply user/group ID
to other functions
}
}
\details{
These functions look for Zotero user ID and \href{https://www.zotero.org/support/dev/web_api/v3/basics#authentication}{Web API key}
by looking at the following places and returning as soon as a value is
found:
\itemize{
\item Options \code{zotero.user} and \code{zotero.key} respectively
\item Environment variables \code{ZOTERO_USER} and \code{ZOTERO_KEY} respectively.
}

Best practice is to store both the user ID and the API key in read-protected
\verb{~/.Renviron} as environment variables.

A new API key can be created on \href{https://www.zotero.org/settings/keys/new}{this page}. The own user ID can be
looked up on \href{https://www.zotero.org/settings/keys}{this page}. The group
ID is the integer coming after \verb{/groups/} in the respective Zotero URL,
e.g. \code{197065} in case of the URL \code{.../zotero.org/groups/197065/...}).

Functions \code{zotero_user_id()} and \code{zotero_group_id()} are used to
supply user or group ID to other functions in the package, primarly
\code{\link[=zotero_api]{zotero_api()}}.
}
